// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name APSDKMediationMintegral
@_exported import APSDKMediationMintegral
import AdPopcornSSPSDK
import MTGSDK
import MTGSDKBanner
import MTGSDKNewInterstitial
import MTGSDKReward
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
final public class MintegralBannerAdapter : AdPopcornSSPSDK.BannerAdapterProtocol {
  weak final public var delegate: (any AdPopcornSSPSDK.BannerAdapterDelegate)?
  weak final public var rootViewController: UIKit.UIViewController?
  public init(placementDic: [Swift.String : Swift.String], bannerType: AdPopcornSSPSDK.AdPopcornBannerSize, rootViewController: UIKit.UIViewController?, info: [Swift.String : Any?])
  final public func connectDelegate(delegate: any AdPopcornSSPSDK.BannerAdapterDelegate)
  final public func disconnectDelegate()
  final public func stop()
  @objc deinit
}
extension APSDKMediationMintegral.MintegralBannerAdapter : AdPopcornSSPSDK.BannerAdapterDelegate {
  final public func bannerViewSuccess(bannerView: UIKit.UIView)
  final public func bannerViewFailed(bannerView: UIKit.UIView, error: AdPopcornSSPSDK.NetworkError)
  final public func bannerViewClicked(message: Swift.String)
  final public func bannerViewImpression(message: Swift.String)
}
final public class MintegralInterstitialVideoAdapter : AdPopcornSSPSDK.InterstitialVideoAdapterProtocol {
  final public var delegate: (any AdPopcornSSPSDK.InterstitialVideoAdapterDelegate)?
  final public var rootViewController: UIKit.UIViewController?
  public init(placementDic: [Swift.String : Swift.String], rootViewController: UIKit.UIViewController?, info: [Swift.String : Any?])
  final public func present(from: UIKit.UIViewController, completion: @escaping () -> Swift.Void)
  final public func connectDelegate(delegate: any AdPopcornSSPSDK.InterstitialVideoAdapterDelegate)
  final public func disconnectDelegate()
  @objc deinit
}
extension APSDKMediationMintegral.MintegralInterstitialVideoAdapter : AdPopcornSSPSDK.InterstitialVideoAdapterDelegate {
  final public func interstitialVideoLoadSuccess()
  final public func interstitialVideoLoadFail(error: AdPopcornSSPSDK.NetworkError)
  final public func interstitialVideoShowSuccess(message: Swift.String)
  final public func interstitialVideoShowFail(message: Swift.String)
  final public func interstitialVideoClicked(message: Swift.String)
  final public func interstitialVideoClosed(message: Swift.String)
}
@_inheritsConvenienceInitializers @objc final public class APSSPMintegralNativeAdRenderable : ObjectiveC.NSObject {
  @objc final public var nativeAdView: UIKit.UIView?
  @objc final public var iconImageView: UIKit.UIImageView?
  @objc final public var appNameLabel: UIKit.UILabel?
  @objc final public var appDescLabel: UIKit.UILabel?
  @objc final public var adCallButton: UIKit.UIButton?
  @objc final public var adChoicesViewWithConstraint: UIKit.NSLayoutConstraint?
  @objc final public var adChoicesViewHeightConstraint: UIKit.NSLayoutConstraint?
  @objc override dynamic public init()
  @objc deinit
}
final public class MintegralNativeAdapter : AdPopcornSSPSDK.NativeAdapterProtocol {
  final public var render: Swift.AnyObject?
  weak final public var delegate: (any AdPopcornSSPSDK.NativeViewAdapterDelegate)?
  final public var rootViewController: UIKit.UIViewController?
  public init(placementDic: [Swift.String : Swift.String], rootViewController: UIKit.UIViewController?, render: Swift.AnyObject, info: [Swift.String : Any?])
  final public func connectDelegate(delegate: any AdPopcornSSPSDK.NativeViewAdapterDelegate)
  final public func disconnectDelegate()
  final public func stop()
  @objc deinit
}
extension APSDKMediationMintegral.MintegralNativeAdapter : AdPopcornSSPSDK.NativeViewAdapterDelegate {
  final public func nativeLoadSuccess()
  final public func nativeLoadFail(error: AdPopcornSSPSDK.NetworkError)
  final public func nativeClicked(message: Swift.String)
  final public func nativeImpression(message: Swift.String)
}
final public class MintegralRewardVideoAdapter : AdPopcornSSPSDK.RewardVideoAdapterProtocol {
  final public var rootViewController: UIKit.UIViewController?
  final public var delegate: (any AdPopcornSSPSDK.RewardVideoAdapterDelegate)?
  public init(placementDic: [Swift.String : Swift.String], rootViewController: UIKit.UIViewController?, info: [Swift.String : Any?])
  final public func connectDelegate(delegate: any AdPopcornSSPSDK.RewardVideoAdapterDelegate)
  final public func disconnectDelegate()
  final public func present(from: UIKit.UIViewController, completion: @escaping () -> Swift.Void)
  @objc deinit
}
extension APSDKMediationMintegral.MintegralRewardVideoAdapter : AdPopcornSSPSDK.RewardVideoAdapterDelegate {
  final public func rewardVideoLoadSuccess()
  final public func rewardVideoLoadFail(error: AdPopcornSSPSDK.NetworkError)
  final public func rewardVideoShowSuccess(message: Swift.String)
  final public func rewardVideoShowFail(message: Swift.String)
  final public func rewardVideoClicked(message: Swift.String)
  final public func rewardVideoClosed(message: Swift.String)
  final public func rewardVideoCompleted()
}
